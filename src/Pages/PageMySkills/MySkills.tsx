import React, { useState } from 'react';
import styles from './MySkills.module.css';

const skills = [
  {
    skillName: 'HTML 5',
    description:
      'HTML5 — это основа веб-разработки. Он предоставляет семантическую разметку, что улучшает доступность и SEO. Его новые теги `<video>` и `<audio>`, позволяют легко добавлять мультимедийный контент без плагинов. Также HTML5 поддерживает хранение данных в браузере и работу в offline-режиме, что делает приложения более быстрыми и удобными. HTML5 помогает создавать современные и функциональные сайты.',
  },
  {
    skillName: 'CSS 3',
    description:
      'Знание CSS3 — это ключевой навык для любого веб-разработчика. Во-первых, он позволяет создавать привлекательные и адаптивные интерфейсы, улучшая пользовательский опыт. CSS3 включает новые возможности, такие как градиенты, тени, анимации и трансформации, что делает дизайн более современным и интерактивным. Кроме того, CSS3 поддерживает адаптивный дизайн, позволяя сайтам корректно отображаться на различных устройствах. Это не только повышает визуальную привлекательность, но и способствует лучшему SEO и производительности. В итоге, освоение CSS3 помогает создавать более качественные и конкурентоспособные веб-продукты.',
  },
  {
    skillName: 'JavaScript',
    description:
      'JavaScript — это "мускулы" интерактивных веб-сайтов, приводящие их в движение. JS добавляет динамику, позволяет работать с формами и анимациями, делает страницы более отзывчивыми, например, загружая данные без перезагрузки. Он также является основой для популярных библиотек и фреймворков, таких как React. В общем, JavaScript помогает делать веб-приложения более привлекательными и удобными для пользователей.',
  },
  {
    skillName: 'TypeScript',
    description:
      'TypeScript полезен тем, что добавляет статическую типизацию к JavaScript. Это помогает находить ошибки на этапе разработки, делая код более надежным. С TypeScript легче работать в больших проектах, так как он улучшает читаемость и поддержку кода. Он также поддерживает современные функции JavaScript и предоставляет инструменты для автодополнения и рефакторинга. TypeScript помогает разработчикам создавать более качественные и структурированные приложения.',
  },
  {
    skillName: 'React JS',
    description:
      'React предлагает ряд преимуществ: компонентный подход для удобства разработки, виртуальный DOM для повышения производительности, простое управление состоянием, широкая экосистема библиотек и активное сообщество, что делает его идеальным для создания быстрых и интерактивных веб-приложений.',
  },
  {
    skillName: 'Vite, Webpack',
    description:
      'Vite и Webpack — это инструменты для сборки проектов на JavaScript. Webpack помогает упаковывать все файлы вашего проекта (JavaScript, CSS, изображения) в один или несколько итоговых файлов. Он позволяет использовать плагины и загрузчики для обработки различных типов файлов и оптимизации кода. Vite делает то же самое, но работает быстрее, особенно в режиме разработки. Он использует современный подход с использованием ES-модулей, что позволяет обновлять страницы без перезагрузки. Vite проще настраивать и быстрее запускается.',
  },
  {
    skillName: 'Docker',
    description:
      'Docker — это ключевой навык для любого веб-разработчика. Во-первых, он позволяет создавать привлекательные и адаптивные интерфейсы, улучшая пользовательский опыт. CSS3 включает новые возможности, такие как градиенты, тени, анимации и трансформации, что делает дизайн более современным и интерактивным. Кроме того, CSS3 поддерживает адаптивный дизайн, позволяя сайтам корректно отображаться на различных устройствах. Это не только повышает визуальную привлекательность, но и способствует лучшему SEO и производительности. В итоге, освоение CSS3 помогает создавать более качественные и конкурентоспособные веб-продукты.',
  },
];

const renderSkills = (
  skills: { skillName: string; description: string }[],
  onHover: (text: string) => void
) => {
  return (
    <ul className={styles['skillsList']}>
      {skills.map((skill) => (
        <li
          key={skill.skillName}
          onMouseEnter={() => onHover(skill.description)}
          onMouseLeave={() => onHover('')}
        >
          <h2>{skill.skillName}</h2>
        </li>
      ))}
    </ul>
  );
};

export const MySkills: React.FC = () => {
  const [hoveredText, setHoveredText] = useState<string>('');

  return (
    <>
      <h1>My skills</h1>
      <div className={styles['skillsWrapper']}>
        {renderSkills(skills, setHoveredText)}
        <div className={styles['skillsBanner']}>
          {hoveredText ? (
            hoveredText
          ) : (
            <div style={{fontSize: '30px', padding: '30px 40px'}}>
              Сейчас мой сайт ещё не выглядит так, как я задумал. Пока перевод
              сайта "по кнопке" и мобильная версия находятся в разработке, вы
              можете навести на скилл, чтобы прочитать о его пользе для
              WEB-разработчика
            </div>
          )}
        </div>
      </div>
    </>
  );
};
